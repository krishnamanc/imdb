{"ast":null,"code":"var _jsxFileName = \"C:\\\\Pytorch\\\\IMDB-Clone\\\\src\\\\Components\\\\Search\\\\Search.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport MovieCard from '../Movie/MovieCard';\nimport './Search.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Search = () => {\n  _s();\n  const [movie, setMovie] = useState([]);\n  const [time, setTime] = useState('');\n  const handleOnChange = e => {\n    clearInterval(time);\n    const timeOut = setTimeout(() => searchMovie(e.target.value), 500);\n    setTime(timeOut);\n  };\n  function searchMovie(name) {\n    fetch(`https://api.themoviedb.org/3/${name ? \"search/movie\" : \"movie/upcoming\"}?api_key=dfac79bf601a1c8766457c868e28203e&language=en-US&query=${name}`).then(res => res.json()).then(data => setMovie(data.results));\n  }\n  useEffect(() => {\n    searchMovie();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main-search\",\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"search\",\n        onChange: handleOnChange,\n        className: \"input-search\",\n        placeholder: \"Search here....\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"list-cards\",\n      children: movie.length <= 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"No Results Found\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 21\n      }, this) : movie.map(movie => /*#__PURE__*/_jsxDEV(MovieCard, {\n        movie: movie\n      }, movie.title, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 25\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n_s(Search, \"qiKKEZx5cW4GEAs4C0lpgIQCghY=\");\n_c = Search;\nexport default Search;\nvar _c;\n$RefreshReg$(_c, \"Search\");","map":{"version":3,"names":["React","useState","useEffect","MovieCard","Search","movie","setMovie","time","setTime","handleOnChange","e","clearInterval","timeOut","setTimeout","searchMovie","target","value","name","fetch","then","res","json","data","results","length","map","title"],"sources":["C:/Pytorch/IMDB-Clone/src/Components/Search/Search.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport MovieCard from '../Movie/MovieCard'\r\nimport './Search.css'\r\nconst Search = () => {\r\n    const [movie, setMovie] = useState([])\r\n    const [time, setTime] = useState('')\r\n    const handleOnChange = (e) => {\r\n        clearInterval(time)\r\n        const timeOut = setTimeout(() => searchMovie(e.target.value), 500)\r\n        setTime(timeOut)\r\n    }\r\n    function searchMovie(name) {\r\n        fetch(`https://api.themoviedb.org/3/${name ? \"search/movie\" : \"movie/upcoming\"}?api_key=dfac79bf601a1c8766457c868e28203e&language=en-US&query=${name}`)\r\n            .then(res => res.json())\r\n            .then(data => setMovie(data.results));\r\n    }\r\n    useEffect(() => {\r\n        searchMovie()\r\n    }, [])\r\n\r\n\r\n    return (\r\n        <>\r\n            <div className=\"main-search\">\r\n                <input\r\n                    type=\"search\"\r\n                    onChange={handleOnChange}\r\n                    className='input-search'\r\n                    placeholder='Search here....'\r\n                />\r\n            </div>\r\n            <div className='list-cards'>\r\n                {movie.length <= 0 ?\r\n                    <div>\r\n                        <h1>No Results Found</h1>\r\n                    </div>\r\n                    :\r\n                    movie.map(movie => (\r\n                        <MovieCard movie={movie} key={movie.title} />\r\n                    ))\r\n\r\n                }\r\n\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Search"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,SAAS,MAAM,oBAAoB;AAC1C,OAAO,cAAc;AAAA;AAAA;AACrB,MAAMC,MAAM,GAAG,MAAM;EAAA;EACjB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGL,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACM,IAAI,EAAEC,OAAO,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAMQ,cAAc,GAAIC,CAAC,IAAK;IAC1BC,aAAa,CAACJ,IAAI,CAAC;IACnB,MAAMK,OAAO,GAAGC,UAAU,CAAC,MAAMC,WAAW,CAACJ,CAAC,CAACK,MAAM,CAACC,KAAK,CAAC,EAAE,GAAG,CAAC;IAClER,OAAO,CAACI,OAAO,CAAC;EACpB,CAAC;EACD,SAASE,WAAW,CAACG,IAAI,EAAE;IACvBC,KAAK,CAAE,gCAA+BD,IAAI,GAAG,cAAc,GAAG,gBAAiB,kEAAiEA,IAAK,EAAC,CAAC,CAClJE,IAAI,CAACC,GAAG,IAAIA,GAAG,CAACC,IAAI,EAAE,CAAC,CACvBF,IAAI,CAACG,IAAI,IAAIhB,QAAQ,CAACgB,IAAI,CAACC,OAAO,CAAC,CAAC;EAC7C;EACArB,SAAS,CAAC,MAAM;IACZY,WAAW,EAAE;EACjB,CAAC,EAAE,EAAE,CAAC;EAGN,oBACI;IAAA,wBACI;MAAK,SAAS,EAAC,aAAa;MAAA,uBACxB;QACI,IAAI,EAAC,QAAQ;QACb,QAAQ,EAAEL,cAAe;QACzB,SAAS,EAAC,cAAc;QACxB,WAAW,EAAC;MAAiB;QAAA;QAAA;QAAA;MAAA;IAC/B;MAAA;MAAA;MAAA;IAAA,QACA,eACN;MAAK,SAAS,EAAC,YAAY;MAAA,UACtBJ,KAAK,CAACmB,MAAM,IAAI,CAAC,gBACd;QAAA,uBACI;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAyB;QAAA;QAAA;QAAA;MAAA,QACvB,GAENnB,KAAK,CAACoB,GAAG,CAACpB,KAAK,iBACX,QAAC,SAAS;QAAC,KAAK,EAAEA;MAAM,GAAMA,KAAK,CAACqB,KAAK;QAAA;QAAA;QAAA;MAAA,QAC5C;IAAC;MAAA;MAAA;MAAA;IAAA,QAIJ;EAAA,gBACP;AAEX,CAAC;AAAA,GA3CKtB,MAAM;AAAA,KAANA,MAAM;AA6CZ,eAAeA,MAAM;AAAA;AAAA"},"metadata":{},"sourceType":"module"}